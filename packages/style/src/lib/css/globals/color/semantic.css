/* Set current color SHADE according to current combination of:
 - lightness
 - chroma
 - hue
*/
[class*='status:']:where(
		.status\:default,
		.status\:info,
		.status\:success,
		.status\:warning,
		.status\:danger,
		.status\:error
	) {
	--shade-semantic: oklch(
		var(--lightness-base) var(--chroma) var(--hue-semantic)
	);
	--ink-semantic: oklch(
		var(--lightness-contrast-base) var(--chroma-contrast) var(--hue-semantic)
	);
	--accent-semantic: oklch(
		var(--lightness-accent) var(--chroma-accent-base) var(--hue-semantic)
	);
	--shadow-semantic: oklch(
		var(--lightness-base) var(--chroma) var(--hue-semantic)
	);
}

[class*='bg:'][class*='status:'] {
	--color-bg: var(--shade-semantic, --shade);
	--color-ink: var(--ink-semantic, --ink);
	--color-accent: var(--accent-semantic, --accent);
	--color-shadow: var(--shadow-semantic, --shadow);
	color: var(--color-ink);
	background-color: var(--color-bg);
	border-color: var(--color-accent);
}

[class*=':default'] {
	--hue-semantic: var(--color-theme-primary);
}

[class*=':info'] {
	--hue-semantic: var(--color-semantic-info);
}

[class*=':success'] {
	--hue-semantic: var(--color-semantic-success);
}

[class*=':warning'] {
	--hue-semantic: var(--color-semantic-warning);
}

[class*=':danger'],
[class*=':error'] {
	--hue-semantic: var(--color-semantic-danger);
}
