[class^='l:reveal'] [class*='expand'] {
	position: relative;
	z-index: var(--layout-z-index-layer);
	width: 100%;
	color: var(--ink);
	background-color: var(--shade);
}

[class^='l:reveal'] [class*='expand'] > .icon {
	border: 0;
	height: auto;
	margin: 0;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px;
	white-space: nowrap;
}

/* Fixes bug in Safari where .content overflows parent width */
.l\:reveal.show {
	display: flex;
	flex-direction: column;
	height: 100%;
	width: 100%;
}

.l\:reveal.minimize:not([class*='fixed']) .content {
	border: 0;
	height: 0;
	margin: 0;
	overflow: hidden;
	padding: 0;
	position: absolute;
	white-space: nowrap;
}

.l\:reveal.minimize [class*='expand'] {
	color: var(--ink);
	background-color: var(--shade);
}

[class^='l:reveal'] .end {
	justify-self: flex-end;
}

[class^='l:reveal'][class^='bp:'].l\:stack:only-child {
	inline-size: calc(var(--sidebar-width) - 2 * var(--gap));
}

/* TODO: generate mq mixin */
/* TODO: set [inline/block] size according to alignment */

@media screen and (min-width: 320px) {
	.l\:reveal.bp\:2xs {
		--sidebar-width: var(--sidebar-width-2xs);
	}
}

@media screen and (min-width: 620px) {
	.l\:reveal.bp\:xs {
		--sidebar-width: var(--sidebar-width-xs);
	}
}

/* TODO fix magic bp */
@media screen and (min-width: 935px) {
	/* The reveal layout inside a sidebar is currently only used for sidebar menus:
		- reveal mechanism serves to hide and show the menu on mobile
		- reveal is not necessary on desktop, so on desktop we unset the reveal layout
	Constraining this allows usage of reveal layout in desktop, outside a sidebar context */

	.l\:reveal.show .content {
		top: 0;
		max-height: unset;
	}
	/* TODO: consider creating a specific menu layout that does this without coupling sidebar + reveal layouts */

	/* Fixes bug in Safari where .content overflows parent width */
	[class^='l:side'] > [class^='l:reveal'] {
		&.minimize:not([class*='fixed']) .content {
			padding: var(--ui-size);
			white-space: normal;
			overflow: hidden;
			position: unset;
			width: 100%;
			margin: initial;
		}

		&:not([class*='fixed']) [class*='expand'] {
			display: none;
		}

		&:not([class*='fixed']) [class*='expand'] + * {
			margin-top: 0;
		}
	}
}

@media screen and (min-width: 935px) {
	.l\:reveal.bp\:sm {
		--sidebar-width: var(--sidebar-width-sm);
	}
}

@media screen and (min-width: 1360px) {
	.l\:reveal.bp\:md {
		--sidebar-width: var(--sidebar-width-md);
	}
}

@media screen and (min-width: 1620px) {
	.l\:reveal.bp\:lg {
		--sidebar-width: var(--sidebar-width-lg);
	}
}

@media screen and (min-width: 2048px) {
	.l\:reveal.bp\:xl {
		--sidebar-width: var(--sidebar-width-xl);
	}
}
