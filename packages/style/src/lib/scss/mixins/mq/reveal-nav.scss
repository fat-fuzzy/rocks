/*  reveal-auto media queries */

@mixin switchToRowStyles_RevealNav($containerSize, $size) {
	@container reveal-nav-#{$size} (inline-size < #{$containerSize}) {
		[class*='l:reveal'].sticky {
			--y-size-sticky: calc(
				100vh - 2 * var(--size-ui-header-height) - var(
						--outline-offset-settings
					)
			);
			position: sticky;
			top: var(--y-axis);
			z-index: 1;

			ul.depth-1 {
				--gap: 0;
			}

			&.expanded {
				--y-size: var(--y-size-sticky);
				--x-size: calc(var(--sidebar-width) - var(--outline-offset-settings));
				transition: inline-size 250ms ease-in-out;
				/* transition: transform 250ms ease-in-out; */

				.content {
					overflow: hidden auto;
					inline-size: var(--x-size);
					block-size: fit-content;
					transform: translateX(0);
					opacity: 1;
					transition: transform 250ms ease-in;
					transition: inline-size 250ms ease-in-out;
				}

				.content > * {
					inline-size: 100%;
					transition: inline-size 250ms ease-in-out;
				}
			}

			&.left nav,
			&.right nav {
				display: flex;
				flex-direction: column;
				overflow: hidden auto;
				scrollbar-gutter: stable;

				ul.depth-0 {
					padding-block-end: var(--ui-size) var(--ui-size-lg);
					inline-size: 100%;
				}
			}

			&.collapsed.left,
			&.collapsed.right {
				--y-size: var(--y-size-sticky);
				--x-size: calc(
					var(--layout-sidebar-collapsed) + var(--ui-size-lg) +
						var(--outline-offset-settings) * 2
				);

				.content {
					--x-axis: calc(var(--x-size) * -1);
					inline-size: var(--x-size);
					max-inline-size: calc(100% - var(--outline-offset-base));
				}

				// TODO: clean this up
				nav {
					.content {
						block-size: calc(100vh - var(--size-ui-header-height));
						overflow: hidden auto;
						scrollbar-gutter: stable;
					}
					.content .depth-1 .expanded .content {
						block-size: fit-content;
						overflow: hidden auto;
					}
					.content .depth-1 .collapsed {
						.content {
							block-size: 0;
							overflow: hidden;
						}
					}
				}
			}
		}
	}
}

/**
	 * This fixes the layout for the reveal nav when the sidebar is collapsedd
	 * TODO: figure out how to avoid this magic stuff: design change? / code change?
	 */
@media screen and (min-width: 1225px) {
	[class*='reveal-nav'].collapsed {
		--sidebar-width: calc(var(--layout-sidebar-collapsed) + var(--ui-size-lg));
	}
}

@include switchToRowStyles_RevealNav(220px, '2xs');
@include switchToRowStyles_RevealNav(240px, 'xs');
@include switchToRowStyles_RevealNav(260px, 'sm');
@include switchToRowStyles_RevealNav(300px, 'md');
@include switchToRowStyles_RevealNav(320px, 'lg');
@include switchToRowStyles_RevealNav(360px, 'xl');
@include switchToRowStyles_RevealNav(380px, '2xl');
