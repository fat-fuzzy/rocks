.l\:reveal[class*='fixed'] .content {
	block-size: var(--max-header-height);
	overflow: auto;
}

.l\:reveal.minimize[class*='fixed'] {
	transform: translateX(0);
	transition: transform 250ms ease-in-out;
}

.l\:reveal.minimize[class*='fixed'] .content {
	border: 0;
	height: 0;
	margin: 0;
	overflow: hidden;
	padding: 0;
	white-space: nowrap;
	transition: width 250ms ease-in-out;
}

// TODO fix magic bp
@media screen and (min-width: 935px) {
	// The reveal layout inside a sidebar is currently only used for sidebar menus:
	// - reveal mechanism serves to hide and show the menu on mobile
	// - reveal is not necessary on desktop, so on desktop we unset the reveal layout
	// Constraining this allows usage of reveal layout in desktop, outside a sidebar context
	// TODO: consider creating a specific menu layout that does this without coupling sidebar + reveal layouts

	// Fixes bug in Safari where .content overflows parent width
	.l\:reveal[class*='fixed'] {
		position: fixed;
	}

	.l\:reveal[class*='fixed'].show {
		transition: transform 250ms ease-in-out;
	}

	// Fixes bug in Safari where .content overflows parent width
	.l\:reveal[class*='fixed'].show .content {
		transition: width 250ms ease-in-out;
	}

	.l\:reveal.minimize[class*='fixed'] .content {
		margin-block-start: var(--gap);
	}

	[class^='l:side'] > .l\:reveal {
		&.minimize[class*='fixed'] {
			overflow: hidden;
			transform: translateX(calc(-100% + 2 * var(--gap)));
			transition: transform 250ms ease-in-out;
		}
		&.minimize[class*='fixed'] .content {
			height: auto;
			width: auto;
			transition: width 250ms ease-in-out;
			padding-inline-end: calc(-100% + 2 * var(--gap));
		}
	}

	// TODO: use grid for this
	.l\:reveal[class*='fixed'] {
		top: calc(var(--s3) + var(--s-1) - var(--border-width));
		bottom: var(--gap);
	}

	.l\:reveal[class*='fixed'].show {
		inline-size: var(--current-side-size);
		overflow: auto;
	}

	.l\:reveal[class*='fixed'].show .content {
		margin-block-start: var(--gap);
		transition: width 250ms ease-in-out;
		block-size: calc(
			100vh - var(--gap) - 2 * calc(var(--s3) + var(--s-1) - var(--border-width-xl))
		);
		overflow: auto;
	}
}
