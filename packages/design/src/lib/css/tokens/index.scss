////
/// Design Tokens
/// Autogenerated from tokens.json.
/// DO NOT EDIT!
////

@use "sass:list";
@use "sass:map";

$__token-values: (
  "color.base.black": (
    ".": (#1e1e1e),
  ),
  "color.base.white": (
    ".": (#ffffff),
  ),
  "color.chroma.000": (
    ".": (0.005),
  ),
  "color.chroma.100": (
    ".": (0.005),
  ),
  "color.chroma.200": (
    ".": (0.005),
  ),
  "color.chroma.300": (
    ".": (0.005),
  ),
  "color.chroma.400": (
    ".": (0.005),
  ),
  "color.chroma.500": (
    ".": (0.005),
  ),
  "color.chroma.600": (
    ".": (0.005),
  ),
  "color.hue.framboise": (
    ".": (263.8),
  ),
  "color.hue.gray-violet": (
    ".": (308.5),
  ),
  "color.hue.neonblue": (
    ".": (273.95),
  ),
  "color.hue.seagreen": (
    ".": (215.77),
  ),
  "color.hue.teal": (
    ".": (184.22),
  ),
  "color.hue.vintagerose": (
    ".": (11.66),
  ),
  "color.hue.violet": (
    ".": (285.94),
  ),
  "color.hue.yellow": (
    ".": (263.84),
  ),
  "color.lightness.000": (
    ".": (98%),
  ),
  "color.lightness.100": (
    ".": (88%),
  ),
  "color.lightness.200": (
    ".": (76%),
  ),
  "color.lightness.300": (
    ".": (65%),
  ),
  "color.lightness.400": (
    ".": (54%),
  ),
  "color.lightness.500": (
    ".": (42%),
  ),
  "color.lightness.600": (
    ".": (32%),
  ),
  "color.theme.accent": (
    ".": (215.77),
  ),
  "color.theme.dark": (
    ".": (#1e1e1e),
  ),
  "color.theme.highlight": (
    ".": (11.66),
  ),
  "color.theme.light": (
    ".": (#ffffff),
  ),
  "color.theme.neutral": (
    ".": (308.5),
  ),
  "color.theme.primary": (
    ".": (285.94),
  ),
  "font.sansSerif": (
    ".": (-apple-system, BlinkMacSystemFont, "Segoe UI", "Noto Sans", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji"),
  ),
  "size.base": (
    ".": (1rem),
  ),
  "size.large": (
    ".": (12px),
  ),
  "size.medium": (
    ".": (8px),
  ),
  "size.small": (
    ".": (6px),
  ),
  "size.xlarge": (
    ".": (16px),
  ),
  "size.xsmall": (
    ".": (4px),
  ),
);

$__token-typography-mixins: (
);

@function token($tokenName, $modeName: ".") {
  @if map.has-key($__token-values, $tokenName) == false {
    @error "No token named \"#{$tokenName}\"";
  }
  $_token: map.get($__token-values, $tokenName);
  @if map.has-key($_token, "__cobalt-error") {
    @error map.get($_token, "__cobalt-error");
  }
  @if map.has-key($_token, $modeName) {
    @return map.get($_token, $modeName);
  } @else {
    @return map.get($_token, ".");
  }
}

@function listModes($tokenName) {
  @if map.has-key($__token-values, $tokenName) == false {
    @error "No token named \"#{$tokenName}\"";
  }
  $_modes: ();
  @each $k in map.get($__token-values, $tokenName) {
    @if $k != "." {
      $_modes: list.append($_modes, $k);
    }
  }
  @return $_modes;
}

@mixin typography($tokenName, $modeName: ".") {
  @if map.has-key($__token-typography-mixins, $tokenName) == false {
    @error "No typography mixin named \"#{$tokenName}\"";
  }
  $_mixin: map.get($__token-typography-mixins, $tokenName);
  $_properties: map.get($_mixin, ".");
  @if map.has-key($_mixin, $modeName) {
    $_properties: map.get($_mixin, $modeName);
  }
  @each $_property, $_value in $_properties {
    #{$_property}: #{$_value};
  }
}
