/**
 * Design Tokens
 * Autogenerated from tokens.json.
 * DO NOT EDIT!
 */

import {
  ParsedDimensionToken,
  ParsedFontFamilyToken,
  ParsedNumberToken,
  undefined,
  undefined,
} from '@cobalt-ui/core';

export declare const tokens: {
  'color.chroma.000': ParsedNumberToken['$value'];
  'color.chroma.100': ParsedNumberToken['$value'];
  'color.chroma.200': ParsedNumberToken['$value'];
  'color.chroma.300': ParsedNumberToken['$value'];
  'color.chroma.400': ParsedNumberToken['$value'];
  'color.chroma.500': ParsedNumberToken['$value'];
  'color.chroma.600': ParsedNumberToken['$value'];
  'color.chroma.neutral': ParsedNumberToken['$value'];
  'color.hue.framboise': ParsedNumberToken['$value'];
  'color.hue.gray': ParsedNumberToken['$value'];
  'color.hue.gray-violet': ParsedNumberToken['$value'];
  'color.hue.neonblue': ParsedNumberToken['$value'];
  'color.hue.seagreen': ParsedNumberToken['$value'];
  'color.hue.teal': ParsedNumberToken['$value'];
  'color.hue.vintagerose': ParsedNumberToken['$value'];
  'color.hue.violet': ParsedNumberToken['$value'];
  'color.hue.yellow': ParsedNumberToken['$value'];
  'color.lightness.000': undefined['$value'];
  'color.lightness.100': undefined['$value'];
  'color.lightness.200': undefined['$value'];
  'color.lightness.300': undefined['$value'];
  'color.lightness.400': undefined['$value'];
  'color.lightness.500': undefined['$value'];
  'color.lightness.600': undefined['$value'];
  'color.lightness.dark': undefined['$value'];
  'color.lightness.light': undefined['$value'];
  'color.theme.accent': ParsedNumberToken['$value'];
  'color.theme.highlight': ParsedNumberToken['$value'];
  'color.theme.neutral': ParsedNumberToken['$value'];
  'color.theme.primary': ParsedNumberToken['$value'];
  'color.theme.surface': ParsedNumberToken['$value'];
  'font.sansSerif': ParsedFontFamilyToken['$value'];
  'size.base': ParsedDimensionToken['$value'];
  'size.large': ParsedDimensionToken['$value'];
  'size.medium': ParsedDimensionToken['$value'];
  'size.small': ParsedDimensionToken['$value'];
  'size.xlarge': ParsedDimensionToken['$value'];
  'size.xsmall': ParsedDimensionToken['$value'];
};

export declare const meta: {
  'color.chroma.000': ParsedNumberToken;
  'color.chroma.100': ParsedNumberToken;
  'color.chroma.200': ParsedNumberToken;
  'color.chroma.300': ParsedNumberToken;
  'color.chroma.400': ParsedNumberToken;
  'color.chroma.500': ParsedNumberToken;
  'color.chroma.600': ParsedNumberToken;
  'color.chroma.neutral': ParsedNumberToken;
  'color.hue.framboise': ParsedNumberToken;
  'color.hue.gray': ParsedNumberToken;
  'color.hue.gray-violet': ParsedNumberToken;
  'color.hue.neonblue': ParsedNumberToken;
  'color.hue.seagreen': ParsedNumberToken;
  'color.hue.teal': ParsedNumberToken;
  'color.hue.vintagerose': ParsedNumberToken;
  'color.hue.violet': ParsedNumberToken;
  'color.hue.yellow': ParsedNumberToken;
  'color.lightness.000': undefined;
  'color.lightness.100': undefined;
  'color.lightness.200': undefined;
  'color.lightness.300': undefined;
  'color.lightness.400': undefined;
  'color.lightness.500': undefined;
  'color.lightness.600': undefined;
  'color.lightness.dark': undefined;
  'color.lightness.light': undefined;
  'color.theme.accent': ParsedNumberToken;
  'color.theme.highlight': ParsedNumberToken;
  'color.theme.neutral': ParsedNumberToken;
  'color.theme.primary': ParsedNumberToken;
  'color.theme.surface': ParsedNumberToken;
  'font.sansSerif': ParsedFontFamilyToken;
  'size.base': ParsedDimensionToken;
  'size.large': ParsedDimensionToken;
  'size.medium': ParsedDimensionToken;
  'size.small': ParsedDimensionToken;
  'size.xlarge': ParsedDimensionToken;
  'size.xsmall': ParsedDimensionToken;
};

export declare const modes: Record<string, never>;

export declare function token<K extends keyof typeof tokens>(tokenID: K, modeName?: never): typeof tokens[K];
export declare function token<K extends keyof typeof modes, M extends keyof typeof modes[K]>(tokenID: K, modeName: M): typeof modes[K][M];
